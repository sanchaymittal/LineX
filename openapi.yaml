openapi: 3.0.3
info:
  title: LineX Cross-Border Remittance API
  description: |
    LineX provides a comprehensive REST API for cross-border remittance using USDT stablecoins on the Kaia blockchain. 
    This API features a **Web3-first architecture** with frontend wallet connections, anonymous quotes, and user-authorized gasless transactions.
    
    ## Key Features
    - **Web3-First Architecture**: Frontend handles wallet connections (Web3Auth, MetaMask, WalletConnect)
    - **Anonymous Quotes**: Generate quotes without user identification
    - **Address-Based Identity**: All operations use wallet addresses instead of LINE user IDs
    - **EIP-712 Signatures**: User authorization through cryptographic signatures
    - **Gasless Transactions**: Platform pays gas fees for seamless user experience
    - **Implicit User Creation**: Users created automatically on first transfer
    - **USDT-Only Balances**: Users only need USDT (platform handles KAIA gas fees)
    
    ## Architecture
    - **Network**: Kaia Testnet (Kairos) - Chain ID: 1001
    - **TestUSDT Contract**: Base ERC-20 stablecoin for yield farming
    - **StandardizedYield**: Multi-strategy diversified vault (Bob's workflow)
    - **AutoCompoundVault**: Single-strategy auto-compound vault (Alice's workflow)
    - **Deployment**: Vercel Serverless Functions
    - **Storage**: Redis with TTL-based caching
    
    ## DeFi Integration
    LineX features a clean, economically sound DeFi yield farming system:
    - **2-Contract Architecture**: Focused on profitable stablecoin strategies
    - **No Complex Tokenomics**: Eliminated PYT/NYT splitting for economic soundness
    - **Two Product Types**: Diversification (StandardizedYield) vs Optimization (AutoCompound)
    - **Real Value Creation**: ~9.5% diversified yield vs ~10-12% optimized yield
    
    ## Authentication
    No authentication required for most endpoints (demo mode). All user authorization 
    handled through EIP-712 signatures for sensitive operations.
  version: 2.0.0
  contact:
    name: LineX Support
    url: https://github.com/sanchaymittal/LineX
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://linex-backend-qahxq1b0f-sanchaymittals-projects.vercel.app
    description: Production server (Vercel)

tags:
  - name: Health
    description: System health monitoring and status endpoints
  - name: Quote
    description: Anonymous exchange rate quotes and currency operations
  - name: Wallet
    description: Address-based wallet management and balance queries
  - name: Transfer
    description: User-authorized cross-border transfer operations
  - name: DeFi
    description: Streamlined yield farming with StandardizedYield and AutoCompoundVault
  - name: Webhook
    description: Simplified webhook handlers for testing

paths:
  /:
    get:
      summary: API Root Information
      description: Get API information, version, and available endpoint discovery
      operationId: getApiRoot
      responses:
        '200':
          description: API information and endpoint discovery
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRootResponse'

  /health:
    get:
      tags:
        - Health
      summary: Comprehensive Health Check
      description: Check API health including Redis, blockchain provider, and smart contract connectivity
      operationId: getHealth
      responses:
        '200':
          description: System health status (may include degraded services)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  # Quote Operations (Anonymous)
  /api/v1/quote:
    post:
      tags:
        - Quote
      summary: Generate Anonymous Quote
      description: |
        Generate exchange rate quote without user identification. 
        Quote is valid for 5 minutes and cached in Redis.
      operationId: generateQuote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateQuoteRequest'
            example:
              fromCurrency: "USD"
              toCurrency: "PHP"
              fromAmount: 100
      responses:
        '201':
          description: Quote generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/quote/{quoteId}:
    get:
      tags:
        - Quote
      summary: Get Quote Details
      description: Retrieve existing quote by ID (5-minute TTL)
      operationId: getQuote
      parameters:
        - name: quoteId
          in: path
          required: true
          description: Quote UUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Quote details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteResponse'
        '404':
          description: Quote not found or expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/quote/{quoteId}/validate:
    get:
      tags:
        - Quote
      summary: Validate Quote
      description: Check if quote is still valid and within TTL
      operationId: validateQuote
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Quote validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteValidationResponse'

  /api/v1/quote/rates/current:
    get:
      tags:
        - Quote
      summary: Get Current Exchange Rates
      description: Get current fixed exchange rates for all supported currency pairs
      operationId: getCurrentRates
      responses:
        '200':
          description: Current exchange rates with platform fee
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRatesResponse'

  /api/v1/quote/currencies/pairs:
    get:
      tags:
        - Quote
      summary: Get Supported Currency Pairs
      description: Get list of all supported currency conversion pairs
      operationId: getSupportedPairs
      responses:
        '200':
          description: Supported currency pairs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyPairsResponse'

  # Wallet Operations (Address-Based)
  /api/v1/wallet/{address}:
    get:
      tags:
        - Wallet
      summary: Get User Information by Address
      description: Get user profile information using wallet address
      operationId: getUserByAddress
      parameters:
        - name: address
          in: path
          required: true
          description: Wallet address (0x prefixed, 40 hex characters)
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
            example: "0x742d35Cc8C29B3C4C4f0e9E0E0b24C2c2e5C5e5C"
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: No user found for this address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/wallet/{address}/balance:
    get:
      tags:
        - Wallet
      summary: Get Wallet USDT Balance
      description: |
        Get USDT balance for wallet address. Only returns USDT balance 
        since platform pays gas fees (no KAIA balance needed).
      operationId: getWalletBalance
      parameters:
        - name: address
          in: path
          required: true
          description: Wallet address
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
            example: "0x742d35Cc8C29B3C4C4f0e9E0E0b24C2c2e5C5e5C"
      responses:
        '200':
          description: Wallet USDT balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
        '400':
          description: Invalid address format or balance fetch failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/wallet/{address}/transfers:
    get:
      tags:
        - Wallet
      summary: Get User Transfer History
      description: Get transfer history for a wallet address
      operationId: getUserTransfers
      parameters:
        - name: address
          in: path
          required: true
          description: Wallet address
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
        - name: limit
          in: query
          description: Maximum number of transfers to return
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: User transfer history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfersResponse'

  /api/v1/wallet/faucet:
    post:
      tags:
        - Wallet
      summary: User-Authorized Faucet Claim
      description: |
        Claim 100 test USDT from faucet using EIP-712 signature authorization.
        Smart contract enforces 24-hour cooldown per address. 
        For testing, use different wallet addresses to bypass cooldown.
        Gasless transaction (platform pays fees).
      operationId: claimFaucet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FaucetRequest'
            example:
              userAddress: "0x742d35Cc8C29B3C4C4f0e9E0E0b24C2c2e5C5e5C"
              signature: "0x1234567890abcdef..."
              message: "Faucet claim message with nonce"
      responses:
        '200':
          description: Faucet claim successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaucetResponse'
        '400':
          description: Invalid signature, cooldown active, or claim failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Transfer Operations (User-Authorized)
  /api/v1/transfer:
    post:
      tags:
        - Transfer
      summary: Create User-Authorized Transfer
      description: |
        Create and execute transfer with EIP-712 signature authorization.
        Transfer executes immediately upon creation with valid signature.
        Creates users implicitly if they don't exist.
      operationId: createTransfer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
            example:
              quoteId: "550e8400-e29b-41d4-a716-446655440000"
              from: "0x742d35Cc8C29B3C4C4f0e9E0E0b24C2c2e5C5e5C"
              to: "0x123d35Cc8C29B3C4C4f0e9E0E0b24C2c2e5C1234"
              signature: "0x1234567890abcdef..."
              nonce: 1
              deadline: 1723605600
      responses:
        '201':
          description: Transfer created and processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResponse'
        '400':
          description: Invalid request, signature, or quote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/transfer/{transferId}:
    get:
      tags:
        - Transfer
      summary: Get Transfer Status
      description: Get current status and details of a transfer by ID
      operationId: getTransferStatus
      parameters:
        - name: transferId
          in: path
          required: true
          description: Transfer UUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Transfer details and status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferDetailsResponse'
        '404':
          description: Transfer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/transfer/user/{address}:
    get:
      tags:
        - Transfer
      summary: Get Transfers by Address
      description: Get transfer history for a specific wallet address
      operationId: getTransfersByAddress
      parameters:
        - name: address
          in: path
          required: true
          description: Wallet address
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
        - name: limit
          in: query
          description: Maximum transfers to return
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: Transfer history for address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTransfersResponse'

  /api/v1/transfer/{transferId}/cancel:
    post:
      tags:
        - Transfer
      summary: Cancel Transfer
      description: Cancel a pending transfer (if not yet completed)
      operationId: cancelTransfer
      parameters:
        - name: transferId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for cancellation
                  example: "User requested cancellation"
      responses:
        '200':
          description: Transfer cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelTransferResponse'
        '400':
          description: Cannot cancel transfer (already completed/failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # DeFi Operations (Streamlined Architecture)
  /api/v1/defi/vault/deposit:
    post:
      tags:
        - DeFi
      summary: Deposit to StandardizedYield Vault
      description: |
        Deposit USDT to StandardizedYield vault with EIP-712 signature authorization.
        Multi-strategy diversified vault for risk-conscious users (Bob's workflow).
      operationId: depositToSYVault
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultDepositRequest'
      responses:
        '200':
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultDepositResponse'
        '400':
          description: Invalid input or signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/defi/vault/withdraw:
    post:
      tags:
        - DeFi
      summary: Withdraw from StandardizedYield Vault
      description: |
        Withdraw from StandardizedYield vault with EIP-712 signature authorization.
      operationId: withdrawFromSYVault
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultWithdrawRequest'
      responses:
        '200':
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultWithdrawResponse'
        '400':
          description: Invalid input or signature
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/defi/vault/balance/{address}:
    get:
      tags:
        - DeFi
      summary: Get StandardizedYield Vault Balance
      description: |
        Get user's balance in StandardizedYield vault including shares and underlying assets.
      operationId: getSYVaultBalance
      parameters:
        - name: address
          in: path
          required: true
          description: Wallet address
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
      responses:
        '200':
          description: Vault balance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SYVaultBalanceResponse'
        '400':
          description: Invalid address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/defi/vault/apy:
    get:
      tags:
        - DeFi
      summary: Get StandardizedYield Vault APY
      description: Get current APY and vault information for StandardizedYield vault
      operationId: getSYVaultAPY
      responses:
        '200':
          description: Vault APY and information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultAPYResponse'

  /api/v1/defi/vault/strategies:
    get:
      tags:
        - DeFi
      summary: Get Vault Strategies
      description: Get active strategies and allocations for StandardizedYield vault
      operationId: getVaultStrategies
      responses:
        '200':
          description: Vault strategies information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultStrategiesResponse'

  /api/v1/defi/autocompound/deposit:
    post:
      tags:
        - DeFi
      summary: Deposit to AutoCompound Vault
      description: |
        Deposit USDT to AutoCompoundVault with EIP-712 signature authorization.
        Single-strategy auto-compound vault for yield maximalists (Alice's workflow).
      operationId: depositToAutoCompound
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultDepositRequest'
      responses:
        '200':
          description: Deposit successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoCompoundDepositResponse'

  /api/v1/defi/autocompound/withdraw:
    post:
      tags:
        - DeFi
      summary: Withdraw from AutoCompound Vault
      description: |
        Withdraw from AutoCompoundVault with EIP-712 signature authorization.
      operationId: withdrawFromAutoCompound
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultWithdrawRequest'
      responses:
        '200':
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoCompoundWithdrawResponse'

  /api/v1/defi/autocompound/balance/{address}:
    get:
      tags:
        - DeFi
      summary: Get AutoCompound Vault Balance
      description: |
        Get user's balance in AutoCompoundVault including shares and compounded assets.
      operationId: getAutoCompoundBalance
      parameters:
        - name: address
          in: path
          required: true
          description: Wallet address
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{40}$'
      responses:
        '200':
          description: AutoCompound vault balance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoCompoundBalanceResponse'

  /api/v1/defi/autocompound/info:
    get:
      tags:
        - DeFi
      summary: Get AutoCompound Vault Information
      description: Get AutoCompound vault information including APY and compounding details
      operationId: getAutoCompoundInfo
      responses:
        '200':
          description: AutoCompound vault information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoCompoundInfoResponse'

  /api/v1/defi/autocompound/compound:
    post:
      tags:
        - DeFi
      summary: Trigger Manual Compounding
      description: |
        Attempt to trigger manual compounding (typically auto-compounds automatically)
      operationId: triggerCompounding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userAddress:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{40}$'
              required:
                - userAddress
      responses:
        '200':
          description: Compounding result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  # Signature Generation Endpoints
  /api/v1/signatures/deposit:
    post:
      tags:
        - DeFi
      summary: Generate SY Vault Deposit Signature (Legacy)
      description: Generate fee-delegated deposit signature for StandardizedYield vault
      operationId: generateSYDepositSignature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequest'
      responses:
        '200':
          description: Signature generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureResponse'

  /api/v1/signatures/deposit/sy:
    post:
      tags:
        - DeFi
      summary: Generate SY Vault Deposit Signature
      description: Generate fee-delegated deposit signature for StandardizedYield vault
      operationId: generateSYDepositSignatureExplicit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequest'
      responses:
        '200':
          description: Signature generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureResponse'

  /api/v1/signatures/deposit/autocompound:
    post:
      tags:
        - DeFi
      summary: Generate AutoCompound Deposit Signature
      description: Generate fee-delegated deposit signature for AutoCompound vault
      operationId: generateAutoCompoundDepositSignature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequest'
      responses:
        '200':
          description: Signature generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureResponse'

  /api/v1/signatures/approval:
    post:
      tags:
        - DeFi
      summary: Generate Token Approval Signature
      description: Generate fee-delegated token approval signature
      operationId: generateApprovalSignature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalSignatureRequest'
      responses:
        '200':
          description: Signature generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureResponse'

  /api/v1/signatures/execute:
    post:
      tags:
        - DeFi
      summary: Execute Fee-Delegated Transaction
      description: Execute a fee-delegated transaction using generated signature
      operationId: executeFeeDelegatedTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                senderRawTransaction:
                  type: string
                  description: Signed transaction from signature endpoint
              required:
                - senderRawTransaction
      responses:
        '200':
          description: Transaction executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'

  # Webhook Operations (Simplified)
  /api/v1/webhook/mock:
    post:
      tags:
        - Webhook
      summary: Mock Payment Webhook
      description: Mock webhook endpoint for testing payment provider callbacks
      operationId: handleMockWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  example: "payment_completed"
                transferId:
                  type: string
                  format: uuid
                status:
                  type: string
                  example: "success"
      responses:
        '200':
          description: Webhook processed successfully
        '400':
          description: Invalid webhook payload

components:
  schemas:
    # Standard Response Schemas
    StandardResponse:
      type: object
      required:
        - success
        - data
        - error
        - metadata
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
        data:
          type: object
          nullable: true
          description: Response data (null on error)
        error:
          type: object
          nullable: true
          description: Error details (null on success)
          properties:
            code:
              type: string
              description: Error code identifier
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: Human-readable error message
              example: "Invalid wallet address format"
            details:
              type: object
              description: Additional error context
        metadata:
          type: object
          properties:
            timestamp:
              type: string
              format: date-time
              description: Response timestamp
            requestId:
              type: string
              format: uuid
              description: Request correlation ID

    # API Root Response
    ApiRootResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                  example: "LineX Cross-Border Remittance API - Web3 Architecture"
                version:
                  type: string
                  example: "2.0.0"
                environment:
                  type: string
                  example: "production"
                architecture:
                  type: string
                  example: "Web3-first with address-based identity"
                endpoints:
                  type: object
                  properties:
                    health:
                      type: string
                      example: "/health"
                    quote:
                      type: string
                      example: "/api/v1/quote"
                    wallet:
                      type: string
                      example: "/api/v1/wallet"
                    transfer:
                      type: string
                      example: "/api/v1/transfer"
                    webhooks:
                      type: string
                      example: "/api/v1/webhook"
                    defi:
                      type: string
                      example: "/api/v1/defi"
                network:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Kaia Testnet (Kairos)"
                    chainId:
                      type: integer
                      example: 1001
                    contractAddress:
                      type: string
                      example: "0x09D48C3b2DE92DDfD26ebac28324F1226da1f400"

    # Health Response
    HealthResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, degraded, unhealthy]
                  description: Overall system health
                timestamp:
                  type: string
                  format: date-time
                uptime:
                  type: number
                  description: System uptime in seconds
                environment:
                  type: string
                  example: "production"
                services:
                  type: object
                  properties:
                    redis:
                      $ref: '#/components/schemas/ServiceHealth'
                    blockchain:
                      $ref: '#/components/schemas/ServiceHealth'
                    contract:
                      $ref: '#/components/schemas/ServiceHealth'
                network:
                  type: object
                  properties:
                    chainId:
                      type: integer
                      example: 1001
                    blockNumber:
                      type: integer
                      example: 234567890
                    gasPrice:
                      type: string
                      example: "25000000000"
                contract:
                  type: object
                  properties:
                    address:
                      type: string
                      example: "0x09D48C3b2DE92DDfD26ebac28324F1226da1f400"
                    name:
                      type: string
                      example: "Test USDT"
                    symbol:
                      type: string
                      example: "USDT"
                    decimals:
                      type: integer
                      example: 6
                responseTime:
                  type: string
                  example: "342ms"

    ServiceHealth:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        latency:
          type: string
          description: Service response time
          example: "23ms"
        details:
          type: object
          description: Service-specific health details
        error:
          type: string
          nullable: true
          description: Error message if unhealthy

    # Quote Request/Response Schemas
    GenerateQuoteRequest:
      type: object
      required:
        - fromCurrency
        - toCurrency
        - fromAmount
      properties:
        fromCurrency:
          type: string
          enum: [USD, KRW, PHP, USDT]
          description: Source currency
          example: "USD"
        toCurrency:
          type: string
          enum: [USD, KRW, PHP, USDT]
          description: Target currency
          example: "PHP"
        fromAmount:
          type: number
          minimum: 0.01
          description: Amount to convert
          example: 100

    QuoteResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                quote:
                  $ref: '#/components/schemas/Quote'

    Quote:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Quote identifier
        fromCurrency:
          type: string
          enum: [USD, KRW, PHP, USDT]
          example: "USD"
        toCurrency:
          type: string
          enum: [USD, KRW, PHP, USDT]
          example: "PHP"
        fromAmount:
          type: number
          description: Input amount
          example: 100
        toAmount:
          type: number
          description: Output amount after fees
          example: 5544
        exchangeRate:
          type: number
          description: Applied exchange rate
          example: 55.72
        platformFee:
          type: number
          description: Platform fee percentage
          example: 0.005
        platformFeeAmount:
          type: number
          description: Platform fee in source currency
          example: 0.5
        totalCost:
          type: number
          description: Total cost including fees
          example: 100.5
        expiresAt:
          type: string
          format: date-time
          description: Quote expiration (5 minutes from creation)
        isValid:
          type: boolean
          description: Whether quote is still valid
        createdAt:
          type: string
          format: date-time

    QuoteValidationResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                quoteId:
                  type: string
                  format: uuid
                isValid:
                  type: boolean
                  description: Whether quote is valid and not expired
                expiresAt:
                  type: string
                  format: date-time
                timeRemaining:
                  type: integer
                  description: Seconds until expiration

    ExchangeRatesResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                rates:
                  type: object
                  properties:
                    USD_KRW:
                      type: number
                      example: 1150
                    KRW_USD:
                      type: number
                      example: 0.00087
                    USD_PHP:
                      type: number
                      example: 56
                    PHP_USD:
                      type: number
                      example: 0.0179
                platformFee:
                  type: number
                  description: Platform fee percentage
                  example: 0.005
                timestamp:
                  type: string
                  format: date-time

    CurrencyPairsResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                supportedCurrencies:
                  type: array
                  items:
                    type: string
                  example: ["USD", "KRW", "PHP"]
                pairs:
                  type: array
                  items:
                    type: object
                    properties:
                      from:
                        type: string
                        example: "USD"
                      to:
                        type: string
                        example: "KRW"
                      rate:
                        type: number
                        example: 1150
                  description: All supported conversion pairs

    # Wallet Request/Response Schemas
    UserResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                walletAddress:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{40}$'
                  example: "0x742d35cc8c29b3c4c4f0e9e0e0b24c2c2e5c5e5c"
                firstTransferAt:
                  type: string
                  format: date-time
                  nullable: true
                lastTransferAt:
                  type: string
                  format: date-time
                  nullable: true
                transferCount:
                  type: integer
                  example: 5
                createdAt:
                  type: string
                  format: date-time

    BalanceResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                address:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{40}$'
                  example: "0x742d35cc8c29b3c4c4f0e9e0e0b24c2c2e5c5e5c"
                balance:
                  type: object
                  properties:
                    usdt:
                      type: number
                      description: USDT balance (only balance shown - platform pays gas fees)
                      example: 1500.75
                  description: Only USDT balance returned (no KAIA needed by users)

    FaucetRequest:
      type: object
      required:
        - userAddress
        - signature
        - message
      properties:
        userAddress:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
          description: User wallet address
          example: "0x742d35Cc8C29B3C4C4f0e9E0E0b24C2c2e5C5e5C"
        signature:
          type: string
          description: EIP-712 signature authorizing faucet claim
          example: "0x1234567890abcdef..."
        message:
          type: string
          description: Signed message content
          example: "Faucet claim with nonce"

    FaucetResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                userAddress:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{40}$'
                  example: "0x742d35cc8c29b3c4c4f0e9e0e0b24c2c2e5c5e5c"
                transactionHash:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{64}$'
                  example: "0xabc123def456..."
                message:
                  type: string
                  example: "Faucet claim completed successfully"
                amount:
                  type: string
                  example: "100 USDT"

    # Transfer Request/Response Schemas
    CreateTransferRequest:
      type: object
      required:
        - quoteId
        - from
        - to
        - signature
        - nonce
        - deadline
      properties:
        quoteId:
          type: string
          format: uuid
          description: Valid quote UUID
          example: "550e8400-e29b-41d4-a716-446655440000"
        from:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
          description: Sender wallet address
          example: "0x742d35Cc8C29B3C4C4f0e9E0E0b24C2c2e5C5e5C"
        to:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
          description: Recipient wallet address
          example: "0x123d35Cc8C29B3C4C4f0e9E0E0b24C2c2e5C1234"
        signature:
          type: string
          description: EIP-712 signature authorizing the transfer
          example: "0x1234567890abcdef..."
        nonce:
          type: integer
          description: User nonce for signature uniqueness
          example: 1
        deadline:
          type: integer
          description: Unix timestamp deadline for signature validity
          example: 1723605600

    TransferResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                transfer:
                  $ref: '#/components/schemas/TransferSummary'

    TransferSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Transfer identifier
        status:
          $ref: '#/components/schemas/TransferStatus'
        fromCurrency:
          type: string
          enum: [USD, KRW, PHP, USDT]
        toCurrency:
          type: string
          enum: [USD, KRW, PHP, USDT]
        fromAmount:
          type: number
          example: 100
        toAmount:
          type: number
          example: 5544
        exchangeRate:
          type: number
          example: 55.72
        platformFeeAmount:
          type: number
          example: 0.5
        totalCost:
          type: number
          example: 100.5
        gasless:
          type: boolean
          description: Whether transfer uses gasless execution
          example: true
        from:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
          description: Sender address
        to:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
          description: Recipient address
        createdAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
          nullable: true

    TransferDetailsResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                transfer:
                  allOf:
                    - $ref: '#/components/schemas/TransferSummary'
                    - type: object
                      properties:
                        quoteId:
                          type: string
                          format: uuid
                        transactionHash:
                          type: string
                          pattern: '^0x[a-fA-F0-9]{64}$'
                          nullable: true
                          description: Blockchain transaction hash
                        updatedAt:
                          type: string
                          format: date-time
                        completedAt:
                          type: string
                          format: date-time
                          nullable: true
                        error:
                          type: string
                          nullable: true
                          description: Error message if failed
                        retryCount:
                          type: integer
                          description: Number of retry attempts
                          example: 0

    TransferStatus:
      type: string
      enum:
        - PENDING
        - PROCESSING
        - COMPLETED
        - FAILED
        - EXPIRED
      description: |
        Simplified transfer status values:
        - PENDING: Transfer created, awaiting execution
        - PROCESSING: Transaction being processed on blockchain
        - COMPLETED: Transfer completed successfully
        - FAILED: Transfer failed (invalid signature, insufficient balance, etc.)
        - EXPIRED: Transfer expired due to deadline

    UserTransfersResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                address:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{40}$'
                  description: Wallet address
                transfers:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      quoteId:
                        type: string
                        format: uuid
                      status:
                        $ref: '#/components/schemas/TransferStatus'
                      fromCurrency:
                        type: string
                      toCurrency:
                        type: string
                      fromAmount:
                        type: number
                      toAmount:
                        type: number
                      totalCost:
                        type: number
                      from:
                        type: string
                        pattern: '^0x[a-fA-F0-9]{40}$'
                      to:
                        type: string
                        pattern: '^0x[a-fA-F0-9]{40}$'
                      transactionHash:
                        type: string
                        pattern: '^0x[a-fA-F0-9]{64}$'
                        nullable: true
                      createdAt:
                        type: string
                        format: date-time
                      completedAt:
                        type: string
                        format: date-time
                        nullable: true
                count:
                  type: integer
                  description: Number of transfers returned

    CancelTransferResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                transferId:
                  type: string
                  format: uuid
                status:
                  type: string
                  enum: [CANCELLED]
                message:
                  type: string
                  example: "Transfer cancelled successfully"
                reason:
                  type: string
                  example: "User requested cancellation"

    # Error Response Schema
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            success:
              type: boolean
              enum: [false]
            data:
              type: object
              nullable: true
            error:
              type: object
              properties:
                code:
                  type: string
                  enum:
                    - VALIDATION_ERROR
                    - QUOTE_NOT_FOUND
                    - QUOTE_GENERATION_FAILED
                    - TRANSFER_NOT_FOUND
                    - TRANSFER_CREATION_FAILED
                    - FAUCET_CLAIM_FAILED
                    - BALANCE_FETCH_FAILED
                    - USER_NOT_FOUND
                    - VAULT_OPERATION_FAILED
                    - DEFI_SERVICE_UNAVAILABLE
                    - INTERNAL_ERROR
                  example: "VALIDATION_ERROR"
                message:
                  type: string
                  example: "Invalid wallet address format"
                details:
                  type: object
                  description: Additional error context

    # DeFi Request Schemas
    VaultDepositRequest:
      type: object
      required:
        - amount
        - signature
        - nonce
        - deadline
      properties:
        amount:
          type: string
          description: Amount to deposit (in token units)
          example: "1000000000"
        signature:
          type: string
          description: EIP-712 signature
        nonce:
          type: integer
          minimum: 1
        deadline:
          type: integer
          description: Unix timestamp deadline
        senderRawTransaction:
          type: string
          description: Signed transaction data
          nullable: true

    VaultWithdrawRequest:
      type: object
      required:
        - shares
        - signature
        - nonce
        - deadline
      properties:
        shares:
          type: string
          description: Shares to withdraw
          example: "1000000000"
        signature:
          type: string
          description: EIP-712 signature
        nonce:
          type: integer
          minimum: 1
        deadline:
          type: integer
          description: Unix timestamp deadline
        senderRawTransaction:
          type: string
          description: Signed transaction data
          nullable: true

    SignatureRequest:
      type: object
      required:
        - privateKey
        - userAddress
        - vaultAddress
        - amount
      properties:
        privateKey:
          type: string
          description: Private key for signing (testing only)
        userAddress:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
        vaultAddress:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
        amount:
          type: string
          description: Amount in token units

    ApprovalSignatureRequest:
      type: object
      required:
        - privateKey
        - userAddress
        - tokenAddress
        - spenderAddress
        - amount
      properties:
        privateKey:
          type: string
          description: Private key for signing (testing only)
        userAddress:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
        tokenAddress:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
        spenderAddress:
          type: string
          pattern: '^0x[a-fA-F0-9]{40}$'
        amount:
          type: string
          description: Amount to approve

    # DeFi Response Schemas
    VaultDepositResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                txHash:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{64}$'
                shares:
                  type: string
                  description: Shares received from deposit
                timestamp:
                  type: number

    VaultWithdrawResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                txHash:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{64}$'
                assets:
                  type: string
                  description: Assets withdrawn
                timestamp:
                  type: number

    AutoCompoundDepositResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                txHash:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{64}$'
                shares:
                  type: string
                compoundingEnabled:
                  type: boolean
                  example: true
                timestamp:
                  type: number

    AutoCompoundWithdrawResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                txHash:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{64}$'
                assets:
                  type: string
                compoundEarnings:
                  type: string
                  description: Earnings from compounding
                timestamp:
                  type: number

    SYVaultBalanceResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                address:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{40}$'
                balance:
                  type: object
                  description: Vault balance details
                timestamp:
                  type: number

    AutoCompoundBalanceResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                address:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{40}$'
                balance:
                  type: object
                  properties:
                    shares:
                      type: string
                    underlyingAssets:
                      type: string
                    sharePrice:
                      type: string
                timestamp:
                  type: number

    VaultAPYResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                apy:
                  type: string
                  example: "9.5"
                totalAssets:
                  type: string
                totalSupply:
                  type: string
                timestamp:
                  type: number

    VaultStrategiesResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                strategies:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      allocation:
                        type: number
                      apy:
                        type: string
                totalStrategies:
                  type: integer
                timestamp:
                  type: number

    AutoCompoundInfoResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                totalAssets:
                  type: string
                totalSupply:
                  type: string
                apy:
                  type: number
                  example: 8.5
                riskLevel:
                  type: integer
                  example: 3
                compoundingRate:
                  type: string
                  example: "24"
                lastCompound:
                  type: number

    SignatureResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                senderRawTransaction:
                  type: string
                  description: Signed transaction data
                transactionDetails:
                  type: object
                  properties:
                    type:
                      type: number
                    from:
                      type: string
                    to:
                      type: string
                    gasLimit:
                      type: string
                    gasPrice:
                      type: string
                    nonce:
                      type: number
                    dataLength:
                      type: number

    TransactionResponse:
      allOf:
        - $ref: '#/components/schemas/StandardResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                transactionHash:
                  type: string
                  pattern: '^0x[a-fA-F0-9]{64}$'
                blockNumber:
                  type: number
                gasUsed:
                  type: string
                message:
                  type: string
                  example: "Transaction executed successfully"

